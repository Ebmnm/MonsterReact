{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.js","components/search-box/search-box.components.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","onChange","type","App","e","setState","searchFeild","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wSAAe,I,wBCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,6BACtB,6BAAKL,EAAMI,QAAQE,OACnB,kCAAKN,EAAMI,QAAQG,aCFdC,EAAW,SAACR,GAAD,OACrB,qBAAKC,UAAU,YAAf,SACID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJfM,G,MAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACtB,uBACCC,SAAUD,EACVE,KAAK,SACJH,YAAaA,MCsCJI,E,kDAvCb,aAAc,IAAD,8BACX,gBAaJH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbnC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAY,IAJH,E,qDAQf,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAMxC,WAAU,IAAD,EACyBC,KAAKN,MAA9Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAChD,OACE,sBAAK9B,UAAU,MAAf,UACC,kDACE,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7BXI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.873e9997.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\r\nimport \"./card.styles.css\"\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}1?set=set2&size=180x180`} />\r\n        <h1>{props.monster.name}</h1>\r\n        <p> {props.monster.email}</p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport \"./card-list.styles.css\"\r\nimport {Card} from \"../card/card.component\"\r\n\r\n\r\nexport const CardList = (props) => (\r\n  (<div className=\"card-list\">\r\n      {props.monsters.map(monster => ( \r\n         <Card key={monster.id} monster={monster} />\r\n           ))}\r\n            </div>)\r\n)","import React from \"react\";\r\n\r\nimport \"./search-box.styles.css\"\r\n\r\nexport const SearchBox =  ({placeholder, handleChange}) => (\r\n    <input\r\n     onChange={handleChange}\r\n     type=\"search\"\r\n      placeholder={placeholder} \r\n      />\r\n)","import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from \"react\"\nimport {CardList} from \"./components/card-list/card-list.component\"\nimport {SearchBox} from \"./components/search-box/search-box.components\"\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchFeild:\"\"\n    }\n  }\n\ncomponentDidMount() {\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n  .then(response => response.json())\n  .then(users => this.setState({monsters: users}))\n}\n\nhandleChange = (e) => {\n  this.setState({searchFeild: e.target.value})\n}\n  render() {\n    const {monsters, searchFeild} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchFeild.toLowerCase()))\n      return (\n        <div className=\"App\">\n         <h1>Monsters Rolodex</h1>\n           <SearchBox\n           placeholder=\"Search Monsters\"\n           handleChange={this.handleChange}\n           />\n         <CardList monsters={filteredMonsters} />\n        \n    \n        </div>\n      );\n  }\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}